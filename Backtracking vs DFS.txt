// 백트래킹(Backtracking)

해를 찾아가는 도중, 지금의 경로가 해가 될 것 같지 않으면 
그 경로를 더이상 가지 않고 되돌아갑니다.

즉, 코딩에서는 반복문의 횟수까지 줄일 수 있으므로 효율적입니다.

이를 가지치기라고 하는데, 불필요한 부분을 쳐내고 최대한 올바른 쪽으로 간다는 의미입니다.

일반적으로, 불필요한 경로를 
조기에 차단할 수 있게 되어 경우의 수가 줄어들지만, 
만약 N!의 경우의 수를 가진 문제에서 
최악의 경우에는 여전히 지수함수 시간을 
필요로 하므로 처리가 불가능 할 것입니다.


// 깊이 우선 탐색(DFS)

DFS는 가능한 모든 경로(후보)를 탐색합니다. 
따라서, 불필요할 것 같은 경로를 
사전에 차단하거나 하는 등의 행동이 없으므로 
경우의 수를 줄이지 못합니다.

따라서 N! 가지의 경우의 수를 가진 문제는 DFS로 처리가 불가능할 것입니다.(???)


// 백트래킹 기법의 유망성 판단
어떤 노드의 유망성, 
즉 해가 될 만한지 판단한 후 유망하지 않다고 결정되면 
그 노드의 이전(부모)로 돌아가(Backtracking) 다음 자식 노드로 갑니다.

해가 될 가능성이 있으면 유망하다(promising)고 하며, 
유망하지 않은 노드에 가지 않는 것을 
가지치기(pruning) 한다고 하는 것입니다.

n-queen 문제가 backtracking의 대표적인 문제임
백준 9663번


출처 https://chanhuiseok.github.io/posts/algo-23/